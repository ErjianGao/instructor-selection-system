# This workflow will build a Java project with Maven
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

# 工作流名称
name: Java CI with Maven

# 监听
on:
  # 当向master分支push操作的时候执行操作
  push:
    # 分支列表
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:
  # 持续集成
  build:
    # 指定操作系统（自动生成），在ubuntu上执行下列操作
    runs-on: ubuntu-latest
    steps:
      # 声明步骤名称
      - name: Check out the repo
        # 将步骤暴露出去为actions，类似于发布出去，让别人调用，这是GitHub提供的actions，只要一执行use就会执行一系列操作，此步是将仓库中的源码提取出来，并不需要关心位置
        uses: actions/checkout@v2
      # 配置JDK
      - name: Set up JDK 11
        # 把ubuntu中的jdk版本设为11
        uses: actions/setup-java@v1
        # 参数赋给上边的use
        with:
          java-version: 11
      # 构建
      - name: Build with Maven
        # 由GitHub提供的服务器进行构建、打包，单元测试中涉及到数据库的操作，所以单元测试不会通过，应该声明跳过单元测试，或者直接在gitignore中把测试的代码忽略
        run: mvn package -DskipTests
      # 将镜像推送到镜像服务器
      - name: push to package
        # 使用个人令牌或密码进行docker登录
        # 根据指定的目录内的Dockerfile进行构建，由于是当前目录，所以就是一个点，打标签 服务器/仓库/镜像:版本
        # 发布镜像
        run: |
          ${{ secrets.DOCKER_LOGIN }}
          docker build . -t docker.pkg.github.com/erjiangao/tutor-selection-tool/tutor-selection-tool:latest
          docker push docker.pkg.github.com/erjiangao/tutor-selection-tool/tutor-selection-tool:latest

  # 持续部署
  deploy:
    # 需要build执行完才能执行部署
    needs: [ build ]
    runs-on: ubuntu-latest
    steps:
      - name: deploy
        # 使用第三方提供的登录actions
        uses: appleboy/ssh-action@master
        # 登录需要的参数
        with:
          host: ${{ secrets.SERVER_HOST }}
          username: ${{ secrets.SERVER_USERNAME }}
          password: ${{ secrets.SERVER_PASSWORD }}
          # 登录后执行命令
          script: |
            # 进入到项目文件夹中
            cd /home/erjiangao/services/tutor-selection-tool
            # 重新基于docker-compose.yml拉取镜像
            docker-compose pull
            # 如果文件名不叫docker-compose.yml，则加-f参数，基于指定文件执行后台启动
            docker-compose up -d
            [ $(docker images -f dangling=true docker.pkg.github.com/erjiangao/tutor-selection-tool/tutor-selection-tool:latest -q) ] && \
            docker rmi $(docker images -f dangling=true docker.pkg.github.com/erjiangao/tutor-selection-tool/tutor-selection-tool:latest -q)
